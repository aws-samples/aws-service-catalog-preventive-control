# * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# *
# * Permission is hereby granted, free of charge, to any person obtaining a copy of this
# * software and associated documentation files (the "Software"), to deal in the Software
# * without restriction, including without limitation the rights to use, copy, modify,
# * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# * permit persons to whom the Software is furnished to do so.
# *
# * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
AWSTemplateFormatVersion: '2010-09-09'
Description: Create Service Catalog Deployment S3 Bucket
Parameters:
  BucketName:
    Description: S3 Bucket Name
    Type: String

  BaselineFunctionRoleName:
    Description: Name of the role that will be use for Baseline Function
    Type: String
    Default: control-tower-baseline-lambda-role

  OrganizationId:
    Description: AWS OrganizationId
    Type: String    
    Default: ''

Conditions:
  AddBucketPolicy: !Not [!Equals [!Ref OrganizationId, '']]

Resources:

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: BucketOwnerFullControl
      VersioningConfiguration:
        Status: Enabled

  BucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Condition: AddBucketPolicy
    Properties: 
      Bucket: 
        Ref: S3Bucket
      PolicyDocument: 
        Statement: 
          - 
            Action: 
              - "s3:GetObject"
            Effect: "Allow"
            Resource: 
              Fn::Join: 
                - ""
                - 
                  - "arn:aws:s3:::"
                  - 
                    Ref: S3Bucket
                  - "/*"
            Principal: 
              AWS: "*"
            Condition: 
              StringLike: 
                aws:PrincipalArn: 
                  - arn:aws:iam::*:role/AWSControlTowerExecution
                  - !Sub 'arn:aws:iam::*:role/${BaselineFunctionRoleName}'
              StringEquals:
                aws:PrincipalOrgID: !Ref OrganizationId

Outputs:
  BucketArn:
    Value: !GetAtt S3Bucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}-BucketArn
     
