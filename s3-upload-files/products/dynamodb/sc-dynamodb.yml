# * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# *
# * Permission is hereby granted, free of charge, to any person obtaining a copy of this
# * software and associated documentation files (the "Software"), to deal in the Software
# * without restriction, including without limitation the rights to use, copy, modify,
# * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# * permit persons to whom the Software is furnished to do so.
# *
# * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: 2010-09-09
Description: Service Catalog DynamoDB Product
Parameters:
  TableName:
    Description: A name for the table
    Type: String
  ReadCapacityUnits:
    Description: Sets the desired minimum number of consistent reads
    Type: Number
    Default: 5
  WriteCapacityUnits:
    Description: Sets the desired minimum number of consistent writes
    Type: Number
    Default: 5
  KeySchema:
    Description: Specifies the attributes that make up the primary key for the table
    Type: String
  AttributeDefinitions:
    Description: A list of attributes that describe the key schema for the table and indexes.
    Type: String
  Tags:
    Description: The tags to be applied to the resource.
    Type: String
    Default: ''

Conditions:
  HasTags: !Not [!Equals [!Ref Tags, '']]

Resources:
  GetTags:
    Type: "Custom::ResourceCompliance"
    Condition : HasTags
    Version: "1.0"
    Properties:
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:sc-resource-compliance'
      Action:
        Name: json
        Parameters:
          JSON: !Ref Tags
          Type: Tags
  GetAtributes:
    Type: "Custom::ResourceCompliance"
    Version: "1.0"
    Properties:
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:sc-resource-compliance'
      Action:
        Name: json
        Parameters:
          JSON: !Ref AttributeDefinitions
          Type: DynamoDBSchema
  GetKey:
    Type: "Custom::ResourceCompliance"
    Version: "1.0"
    Properties:
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:sc-resource-compliance'
      Action:
        Name: json
        Parameters:
          JSON: !Ref KeySchema
          Type: DynamoDBKey

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: !GetAtt GetAtributes.Json
      KeySchema: !GetAtt GetKey.Json
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnits
        WriteCapacityUnits: !Ref WriteCapacityUnits
      TableName: !Ref TableName
      SSESpecification:
        SSEEnabled: true
      Tags: !If [HasTags, !GetAtt GetTags.Json, !Ref "AWS::NoValue"]

Outputs:
  DynamoDB:
    Value: !Ref DynamoDBTable
    Export:
      Name: !Sub ${AWS::StackName}-DynamoDB
  DynamoDBArn:
    Value: !GetAtt DynamoDBTable.Arn
    Export:
      Name: !Sub ${AWS::StackName}-DynamoDBArn
